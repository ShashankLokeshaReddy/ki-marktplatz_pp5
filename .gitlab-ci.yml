
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.

# Official language image. 
image: python:3.8.3

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Generate virtual environment for packages
before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate


stages:          # List of stages for jobs, and their order of execution
  - build
  - test

build-job:       # This job runs in the build stage, which runs first.
  tags:
    - asprunner
  stage: build
  script:
    - echo "Compiling the code..."
    - pip install -r requirements.txt
    - echo "Compile complete."

unit-test-job:   # This job runs in the test stage.
  tags:
    - asprunner
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
   # - pip install pytest-cov
   # - pytest --cov=arise-prototype 

lint-test-job:   # This job also runs in the test stage.
  tags:
    - asprunner
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code..."
    - pip install flake8
    - flake8 ./
    - echo "No lint issues found."

